generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

enum Role {
  ADMIN
  EDITOR
  AUTHOR
}

enum PostStatus {
  DRAFT
  PUBLISHED
}

model User {
  id       String   @id @default(cuid())
  email    String   @unique
  password String
  name     String?
  role     Role     @default(AUTHOR)
  posts    Post[]
}

model Tag {
  id    String @id @default(cuid())
  name  String @unique
  posts Post[] @relation("PostTags")
}

model Category {
  id    String @id @default(cuid())
  name  String @unique
  posts Post[]
}

model Post {
  id          String      @id @default(cuid())
  title       String
  slug        String      @unique
  status      PostStatus  @default(DRAFT)
  excerpt     String?
  content     String?
  coverImage  String?
  category    Category?   @relation(fields: [categoryId], references: [id])
  categoryId  String?
  tags        Tag[]       @relation("PostTags")
  author      User        @relation(fields: [authorId], references: [id])
  authorId    String
  publishedAt DateTime?
  createdAt   DateTime    @default(now())
  updatedAt   DateTime    @updatedAt
}

model Product {
  id            String   @id @default(cuid())
  name          String
  brand         String
  slug          String   @unique
  images        String[]
  specs         Json
  affiliateLinks Json?
  price         Float?
  rating        Float?
  createdAt     DateTime @default(now())
  updatedAt     DateTime @updatedAt
}

model Comparison {
  id        String    @id @default(cuid())
  title     String
  products  Product[]
  verdict   String?
  summary   String?
  createdAt DateTime  @default(now())
  updatedAt DateTime  @updatedAt
}

model Page {
  id        String   @id @default(cuid())
  title     String
  slug      String   @unique
  content   String?
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}
